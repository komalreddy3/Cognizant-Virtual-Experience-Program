# -*- coding: utf-8 -*-
"""Machine_learning_production.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dHZSL_ozpTuu_cmwc60nq6VP0WtN705J
"""

import pandas as pd

sales_df = pd.read_csv("/content/sales.csv")
sales_df.drop(columns=["Unnamed: 0"], inplace=True, errors='ignore')
sales_df.head()

stock_df = pd.read_csv("/content/sensor_stock_levels.csv")
stock_df.drop(columns=["Unnamed: 0"], inplace=True, errors='ignore')
stock_df.head()

temp_df = pd.read_csv("/content/sensor_storage_temperature.csv")
temp_df.drop(columns=["Unnamed: 0"], inplace=True, errors='ignore')
temp_df.head()

sales_df.info()

stock_df.info()

temp_df.info()

def convert_to_datetime(data: pd.DataFrame = None, column: str = None):

  dummy = data.copy()
  dummy[column] = pd.to_datetime(dummy[column], format='%Y-%m-%d %H:%M:%S')
  return dummy

sales_df = convert_to_datetime(sales_df, 'timestamp')
sales_df.info()

stock_df = convert_to_datetime(stock_df, 'timestamp')
stock_df.info()

temp_df = convert_to_datetime(temp_df, 'timestamp')
temp_df.info()

sales_df.head()

from datetime import datetime

def convert_timestamp_to_hourly(data: pd.DataFrame = None, column: str = None):
  dummy = data.copy()
  new_ts = dummy[column].tolist()
  new_ts = [i.strftime('%Y-%m-%d %H:00:00') for i in new_ts]
  new_ts = [datetime.strptime(i, '%Y-%m-%d %H:00:00') for i in new_ts]
  dummy[column] = new_ts
  return dummy

sales_df = convert_timestamp_to_hourly(sales_df, 'timestamp')
sales_df.head()

stock_df = convert_timestamp_to_hourly(stock_df, 'timestamp')
stock_df.head()

temp_df = convert_timestamp_to_hourly(temp_df, 'timestamp')
temp_df.head()

sales_agg = sales_df.groupby(['timestamp', 'product_id']).agg({'quantity': 'sum'}).reset_index()
sales_agg.head()

stock_agg = stock_df.groupby(['timestamp', 'product_id']).agg({'estimated_stock_pct': 'mean'}).reset_index()
stock_agg.head()

temp_agg = temp_df.groupby(['timestamp']).agg({'temperature': 'mean'}).reset_index()
temp_agg.head()

merged_df = stock_agg.merge(sales_agg, on=['timestamp', 'product_id'], how='left')
merged_df.head()

merged_df.info()

merged_df['quantity'] = merged_df['quantity'].fillna(0)
merged_df.info()

product_categories = sales_df[['product_id', 'category']]
product_categories = product_categories.drop_duplicates()

product_price = sales_df[['product_id', 'unit_price']]
product_price = product_price.drop_duplicates()

merged_df = merged_df.merge(product_categories, on="product_id", how="left")
merged_df.head()

merged_df = merged_df.merge(product_price, on="product_id", how="left")
merged_df.head()

merged_df.info()

merged_df['timestamp_day_of_month'] = merged_df['timestamp'].dt.day
merged_df['timestamp_day_of_week'] = merged_df['timestamp'].dt.dayofweek
merged_df['timestamp_hour'] = merged_df['timestamp'].dt.hour
merged_df.drop(columns=['timestamp'], inplace=True)
merged_df.head()

merged_df = pd.get_dummies(merged_df, columns=['category'])
merged_df.head()

merged_df.info()

merged_df.drop(columns=['product_id'], inplace=True)
merged_df.head()

merged_df.to_csv("/content/out.csv")

!python cog.py